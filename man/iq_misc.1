.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "" "" "" "" ""
.hy
.PP
% IQ_MISC(1) Version 2.0 | IQ_MISC Miscellaneous Functions for IQ
.SH NAME
.PP
\f[B]iq_misc\f[R] \[em] Miscellaneous Functions for the \f[B]IQ\f[R]
Precision Decimal Calculator
.SS Utility Functions
.PP
\f[B]factorial\f[R] \[em]- Returns the `Factorial' of a number
.IP
.nf
\f[C]
Requires 1 integer input  
Example: \[aq]factorial 5\[aq] = 120  
\f[R]
.fi
.PP
\f[B]gcf\f[R] \[em]- Returns the Greatest Common Factor of 2 numbers
.IP
.nf
\f[C]
Requires 2 integer inputs  
Example: \[aq]gcf 123 396\[aq] = 3  
\f[R]
.fi
.PP
\f[B]dec2ratio\f[R] \[em]- Converts a Decimal Fraction to a whole-number
Ratio
.IP
.nf
\f[C]
Requires a decimal fraction input  
Example: \[aq]dec2ratio 0.1388\[aq] = 347/2500
\f[R]
.fi
.PP
\f[B]invert\f[R] \[em]- Returns the inversion (1/X) of any number
.IP
.nf
\f[C]
Usage: \[aq]invert [-s?,-S?,-e?] Number\[aq]

Returns the inversion (1/X) of any number. Number
can be positive or negative, expressed as an integer,
decimal or in Exponential Notation.

\[aq]invert\[aq] returns answers in normally scaled outputs or in
Significant Digits using the scaling options: -s? or -S?
Example: \[aq]invert -s1 -.99999995\[aq] = -1.0
Example: \[aq]invert -S1 -.99999995\[aq] = -1.00000005
Example: \[aq]invert -s8 12.99999999\[aq] = 0.07692307
Example: \[aq]invert -S8 12.99999999\[aq] = 0.076923076

Inputs in Exponential Notation are automatically detected
and answers are returned in Exponential Notation:
Example: \[aq]invert -S8 1.2e10\[aq] = 8.33333333e-11
Example: \[aq]invert -S8 1.2e-10\[aq] = 8.33333333e9
(works with any of the scaling types -s? -S? or -e?)
\f[R]
.fi
.PP
\f[B]pmod_eucl\f[R] \[em]- Returns a Positive Euclidian Modulo
.IP
.nf
\f[C]
Usage: \[aq]pmod_eucl [-s?] dividend divisor\[aq]

Example: \[aq]pmod_eucl -s0 23 17\[aq] = 6
\f[R]
.fi
.PP
\f[B]div_floor\f[R] \[em]- Returns the Quotient of Floored Division
.IP
.nf
\f[C]
Usage: \[aq]div_floor [-s?] dividend divisor\[aq]

Example: \[aq]div_floor -s0 23 17\[aq] = 3
\f[R]
.fi
.PP
\f[B]dot_1d\f[R] \[em]- 1D Multiply Accumulate Engine
.IP
.nf
\f[C]
Usage: \[aq]dot_1d [-s?] [-a??] series1 series2\[aq]

\[aq]dot_1d\[aq] multiplies 2 series of numbers by each other,
summing the products and optionally adding a constant
amount to the Sum Of Products.

Example - multiply two numbers and add a constant:
\[aq]dot_1d -s8 -a2.7182 3.1416 1.618\[aq] = 7.8013088
( ( 3.1416* 1.618 ) + 2.7182 ) = 7.8013088

Example Sum Of Products:
dot_1d -s3 2 3 0.12 0.7 0.5 0.4 = 2.948
( (2*0.7) + (3*0.5) + (0.12*0.4) ) = 2.948

Example Matrix Multiplication plus constant:
dot_1d -s3 -a0.3 2 3 0.12 0.7 0.5 0.4 = 3.248
((2*0.7) + (3*0.5) + (0.12*0.4) + 0.3 ) = 3.248

\[aq]dot_1d\[aq] expects an even number of inputs to be multiplied
The two series of numbers are input in sequence, and dot_1d
splits the inputs into two halves.
    | 2  x  0.7  |  1.4
    | 3  x  0.5  | +1.5
    | 0.12 x 0.4 | +0.48
    |            | ======
    |  SOP       |  2.948
    |  Addend    | +0.3
    |  Output    |  3.248
\f[R]
.fi
.PP
\f[B]mat2\f[R] \[em]- 1D X 2D Matrix Multiplication
.IP
.nf
\f[C]
\[aq]mat2\[aq] is used in our AI projects to perform feed-forward
Matrix Multiplication on square or non-square matrices.

Example NN fragment with 3 Inputs and 2 Hidden nodes
  Inputs   H1weights  H2weights    Hidden Outputs
             [0.7       0.3]       [1.4    0.6]
[2 3 0.12] . [0.5       0.2]   =   [1.5    0.6]
             [0.4       0.1]       [0.48   0.012]
                                   ==============
Outputs:                           2.948   1.212
In Parenthetic Notation:
((2*.7) + (3*.5) + (.12*.4)) =  2.948
((2*.3) + (3*.2) + (.12*.1)) =  1.212

Example:
mat2 -l3 -r2  2 3 .12 .7 .5 .4  .3 .2 .1  = 2.948   1.212

where 2, 3 and 0.12 are Inputs,
0.7, 0.5 and 0.4 are weight values from each
Input to Hidden Node 1.
0.3, 0.2 and 0.1 are the values of the weights from each
Input to Hidden Node 2.

The output is the two Sums Of Prodcuts.
If a Bias is given, it will be added to each output.
mat2 -l3 -r2 -b.3 2 3 .12 .7 .5 .4 .3 .2 .1 = 3.248 1.512
\f[R]
.fi
.SH AUTHOR
.PP
Gilbert Ashley <https://github.com/ShellCanToo/iQalc>
.SH SEE ALSO
.PP
\f[B]iq(1)\f[R] \f[B]iq+(1)\f[R] \f[B]iq_trig(1)\f[R]
\f[B]iq_misc(1)\f[R] \f[B]iq_ai(1)\f[R]
